@model EntityLayer.Concrete.Portfolio
@{
    ViewData["Title"] = "EditPortfolio";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card-header border-0">
    <h3 class="mb-0">Proje Düzenleme Sayfası</h3>
</div>

@* 1. parametre action ismi
2. parametre controller
3. parametre form methot türü *@
@using (Html.BeginForm("EditPortfolio", "Portfolio", FormMethod.Post))
{
    <form class="form-group" method="post">
        @Html.HiddenFor(x => x.PortfolioID) @* id tutulacak burda *@
        <br />
        @Html.Label("Proje Başlığı")
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Name)
        <br />

        <label>Görsel 1</label>
        @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ImageUrl)
        <br />

        <label>Görsel 2</label>
        @Html.TextBoxFor(x => x.ImageUrl2, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ImageUrl2)
        <br />

        <label>Proje Url</label>
        @Html.TextBoxFor(x => x.ProjectUrl, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ProjectUrl)
        <br />

        <label>Fiyat</label>
        @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Price)
        <br />

        <label>Tamamlanma Oranı</label>
        @Html.TextBoxFor(x => x.Value, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Value)
        <br />

        <label>Platform</label>
        @Html.TextBoxFor(x => x.Platform, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Platform)
        <br />
        <button class="btn btn-info">Güncelle</button>
    </form>
}